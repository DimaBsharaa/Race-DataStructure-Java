# Race-DataStructure-Java

This project provides a comprehensive management system for tracking runners and their race results.  
It was developed as part of the **Data Structures & Algorithms course** at Technion.  
The implementation is in **Java** and includes multiple classes for managing runners, race times, and queries using efficient balanced tree structures.

---

## Features

### Runner Management
- **Creation & Removal**: Runners can be added or removed from the system.
- **Race Times**: Race results can be inserted or deleted for each runner.

### Queries
- **Minimum / Average Time**: Retrieve the minimum or average race time of a given runner.  
- **Fastest Runner**: Retrieve the runner with the smallest minimum or average time.  
- **Ranking**: Determine the rank of a runner based on minimum or average times.

### Data Structure
- All operations are designed for efficiency:
  - Add/remove runner → **O(log n)**
  - Add/remove race time → **O(log n + log m_runner)**
  - Queries (min/avg time) → **O(log n)**
  - Fastest runner → **O(1)**
  - Rank by time → **O(log n)**

---

## Classes and Their Functions

- **Race**:  
  Main class managing the competition, exposing all required public operations.

- **Runner**:  
  Represents a runner, stores their race results, and provides aggregation methods.

- **RunKey**:  
  Defines key structures for storing and comparing race entries.

- **RunnerID** (abstract) & **variants (RunnerIDFloat, RunnerIDInfinity, RunnerIDMInfinity, RunnerIDExtent)**:  
  Encapsulate runner identifiers and provide comparison logic.

- **TwoThreeTree**:  
  Balanced 2–3 tree used as the primary data structure, ensuring logarithmic insert, delete, and search operations.

---

## Repository Contents
- `Race.java` — Core management class  
- `Runner.java` — Runner representation and stats  
- `RunKey.java` — Key utility for race entries  
- `RunnerID.java` & extensions — Runner ID abstractions  
- `TwoThreeTree.java` — Balanced tree implementation  
- `DS_Algs_W23_24_programming_assignment.pdf` — Full assignment specification  

---

## How to Build & Run

Compile all files:
```bash
javac *.java
